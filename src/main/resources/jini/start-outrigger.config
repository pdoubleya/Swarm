/* start-transient-jrmp-outrigger.config */

import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;

/* Service starter configuration file that will start
 * a transient Outrigger server.
 */
com.sun.jini.start {
    static private codebase = ConfigUtil.concat(new Object[] {
		"file:${jini_lib_dl_path}${/}outrigger-dl.jar",
		" ",	
		"file:${jini_lib_dl_path}${/}jsk-dl.jar"});

    /* Replace "policy.all" with the name of a policy file
     * that will grant the specified classpath sufficient permissions.
     */
    static private policy = "${jini_res_path}/outrigger.policy";

    /* This needs to be changed to reflect your installation */
    static private classpath = ConfigUtil.concat(new Object[] {
    		"file:${jini_lib_path}${/}jsk-lib.jar",
		" ",
		"file:${jini_lib_path}${/}outrigger.jar"});
    static private config = "${jini_res_path}${/}transient-${service_name}.config";

    static serviceDescriptors = new ServiceDescriptor[] {
        new NonActivatableServiceDescriptor(
            codebase,
            policy,
            classpath,
            "com.sun.jini.outrigger.TransientOutriggerImpl",

            /* Name of config file for the Outrigger server */
            new String[] { config })


        /* If you want to start other non-activatable services
         * in the same VM as Outrigger you can add additional
         * instances of NonActivatableServiceDescriptor here.
         */
    };
}
